"use strict";function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}return Array.from(arr)}var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{!_n&&_i.return&&_i.return()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr))return arr;if(Symbol.iterator in Object(arr))return sliceIterator(arr,i);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),threelet=new Threelet({canvas:document.getElementById("canvas")});threelet.setup("mod-controls",THREE.OrbitControls),threelet.setup("mod-stats",window.Stats,{panelType:1});var scene=threelet.scene,render=threelet.render;render();var group=new THREE.Group;group.rotation.x=-Math.PI/2,scene.add(group);var tgeo=new ThreeGeo({tokenMapbox:"pk.eyJ1IjoiamRldmVsIiwiYSI6ImNqaTV1Nm9nNjA5MjkzcW1od2Y2Y3o0dHgifQ.tf4lJU5fzGJVJ4TyLbnfXA"}),isDebug=0;isDebug&&(tgeo.tokenMapbox="zzzz",tgeo.setApiRgb("../geo-viewer/cache/eiger/mapbox-terrain-rgb"),tgeo.setApiSatellite("../geo-viewer/cache/eiger/mapbox-satellite"));var createTextSprite=function(text,color){return Threelet.Utils.createCanvasSprite(Threelet.Utils.createCanvasFromText(text,256,64,{tfg:color,fontSize:"36px",fontFamily:"Times"}))},demToObjects=function(demUri,demTile,proj){var _plane$position,_ThreeGeo$Utils$bboxT=ThreeGeo.Utils.bboxToWireframe(ThreeGeo.Utils.tileToBbox(demTile),proj,{offsetZ:-.1,color:13369548}),obj=_ThreeGeo$Utils$bboxT.obj,offset=_ThreeGeo$Utils$bboxT.offset,size=_ThreeGeo$Utils$bboxT.size,_demUri=demUri;if(isDebug){var _demTile=_slicedToArray(demTile,3),tx=_demTile[0],ty=_demTile[1];_demUri="../geo-viewer/cache/eiger/mapbox-terrain-rgb-"+_demTile[2]+"-"+tx+"-"+ty+".blob"}var plane=new THREE.Mesh(new THREE.PlaneGeometry(size[0],size[1]),new THREE.MeshBasicMaterial({map:(new THREE.TextureLoader).load(_demUri)}));(_plane$position=plane.position).set.apply(_plane$position,_toConsumableArray(offset));var sp=createTextSprite(""+demTile.join("-"),"#f0f");return sp.position.set(offset[0],offset[1],offset[2]+.1),{wireframe:obj,plane:plane,sprite:sp}},$msg=$("#msg");if(tgeo.tokenMapbox.startsWith("****")){var warning="Please set your Mapbox API token in the ThreeGeo constructor.";throw $msg.append("<div>"+warning+"</div>"),alert(warning),warning}var origin=[46.5763,7.9904],radius=5,_tgeo$getProjection=tgeo.getProjection(origin,radius),proj=_tgeo$getProjection.proj,bbox=_tgeo$getProjection.bbox,unitsPerMeter=_tgeo$getProjection.unitsPerMeter,srcDemUris={};$msg.empty(),$msg.append("<div>---- ROI ----</div>"),$msg.append("<div>lat lng: ("+origin[0]+", "+origin[1]+")</div>"),$msg.append("<div>radius: "+radius+" [km]</div>"),$msg.append("<div>units per km: "+1e3*unitsPerMeter+"</div>"),$msg.append("<div>bbox (w, s, e, n): ("+bbox.map(function(q){return q.toFixed(4)}).join(", ")+")</div>"),$msg.append("<div>---- Terrain Composition ----</div>"),tgeo.getTerrain(origin,radius,12,{onRgbDem:function(meshes){meshes.forEach(function(mesh){group.add(mesh);mesh.geometry.attributes.position.array;var tile=mesh.userData.threeGeo.tile,_ThreeGeo$Utils$bboxT2=ThreeGeo.Utils.bboxToWireframe(ThreeGeo.Utils.tileToBbox(tile),proj,{offsetZ:-.05}),obj=_ThreeGeo$Utils$bboxT2.obj,offset=_ThreeGeo$Utils$bboxT2.offset,sp=createTextSprite(""+tile.join("-"),"#0ff");sp.position.set(offset[0],offset[1],offset[2]+.05),group.add(obj,sp);var srcDem=mesh.userData.threeGeo.srcDem,srcDemUri=""+srcDem.uri+tgeo.tokenMapbox,srcDemTile=srcDem.tile;if(!srcDemUris[srcDemUri]){srcDemUris[srcDemUri]=!0;var _demToObjects=demToObjects(srcDemUri,srcDemTile,proj),wireframe=_demToObjects.wireframe,plane=_demToObjects.plane,sprite=_demToObjects.sprite;group.add(wireframe,plane,sprite)}$msg.append('<div><span style="color: #00ffffff;">tile '+tile.join("-")+'</span> using <span style="color: #ff00ffff";>DEM '+srcDemTile.join("-")+"</span></div>")}),render()},onSatelliteMat:function(mesh){mesh.material.wireframe=!0,render()}});
